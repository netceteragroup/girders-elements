'use strict';var _ActionRegistry=require("../ActionRegistry");var actions=_interopRequireWildcard(require("../../action"));var _immutable=require("immutable");var R=_interopRequireWildcard(require("ramda"));function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;return newObj;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}describe('ActionRegistry',function(){var registry;beforeEach(function(){return registry=new _ActionRegistry.ActionRegistry();});test('works like a registry in terms of the kind, but keeps unique named actions for each kind',function(){registry.register((0,_ActionRegistry.keyFor)([],'update'),1);registry.register((0,_ActionRegistry.keyFor)('foo','update'),2);registry.register((0,_ActionRegistry.keyFor)(['foo','bar'],'update'),4);expect(registry.get((0,_ActionRegistry.keyFromAction)(makeAction([],'update')))).toEqual(1);expect(registry.get((0,_ActionRegistry.keyFromAction)(makeAction([],'update-x')))).toBeUndefined();expect(registry.get(makeKeyFromAction('foo','update'))).toEqual(2);expect(registry.get(makeKeyFromAction(['foo'],'update'))).toEqual(2);expect(registry.get(makeKeyFromAction(_immutable.List.of('foo'),'update'))).toEqual(2);expect(registry.get(makeKeyFromAction(['foo','bar'],'update'))).toEqual(4);expect(registry.get(makeKeyFromAction(['foo','bar','baz'],'update'))).toEqual(4);expect(registry.get(makeKeyFromAction(['foo','X'],'update'))).toEqual(2);expect(registry.get(makeKeyFromAction(['foo','X'],'update-x'))).toBeUndefined();expect(registry.get(makeKeyFromAction(['bla'],'update'))).toEqual(1);expect(registry.get(makeKeyFromAction(['bla'],'update-x'))).toBeUndefined();});});function makeAction(kind,type){var _ref;return _ref={},_defineProperty(_ref,actions.actionMetaProperty,{kind:kind}),_defineProperty(_ref,"type",type),_ref;}var makeKeyFromAction=R.compose(_ActionRegistry.keyFromAction,makeAction);