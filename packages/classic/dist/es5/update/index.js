'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var R=_interopRequireWildcard(require("ramda"));var _invariant=_interopRequireDefault(require("invariant"));var _core=require("@skele/core");var _registry=require("../registry");var Subsystem=_interopRequireWildcard(require("../subsystem"));var impl=_interopRequireWildcard(require("./impl"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;return newObj;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var registryAttribute='@@skele/_updateRegistry';var chainRegistries=_core.registry.chainRegistries;var deprecated=_core.log.deprecated;Subsystem.extend(function(){var _update;var reg=new _registry.ActionRegistry();var _register=R.curry(function(kind,action,update){(0,_invariant.default)(_core.data.isElementRef(kind),'You must provide a valid element reference to register');(0,_invariant.default)(typeof action==='string',"The action must be a string: "+action);(0,_invariant.default)(typeof update==='function','the update must be a function');reg.register(_registry.ActionRegistry.keyFor(kind,action),update);});var forKind=R.curry(function(kind,registrations){(0,_invariant.default)(typeof registrations==='function','You must provide a registrations block');registrations({register:_register(kind)});});var oldRegister=deprecated('Using update.register(kind, registrations) is deprecated. '+'Please use update.forKind() for this syntax.',forKind);return{update:(_update={},_defineProperty(_update,registryAttribute,reg),_defineProperty(_update,"forKind",forKind),_defineProperty(_update,"register",function register(kind,action,update){if(update==null&&typeof action==='function'){var registrations=action;oldRegister(kind,registrations);}else{_register(kind,action,update);}}),_update)};});var _default=Subsystem.create(function(system){var config={registry:getCombinedRegistry(system.subsystemSequence)};return{name:'update',reducer:impl.reducer(config)};});exports.default=_default;var getRegistry=R.path(['update',registryAttribute]);var getCombinedRegistry=R.pipe(R.map(getRegistry),R.reject(R.isNil),chainRegistries);