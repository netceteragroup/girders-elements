'use strict';var _immutable=require("immutable");var _core=require("@skele/core");var actions=_interopRequireWildcard(require("../../action"));var _registry=require("../../registry");var Subsystem=_interopRequireWildcard(require("../../subsystem"));var Kernel=_interopRequireWildcard(require("../../kernel"));var _=_interopRequireDefault(require(".."));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;return newObj;}}var Cursor=_core.internal.Cursor;var registryAttribute='@@skele/_updateRegistry';var flow=_core.data.flow;describe('updates API',function(){var app=Subsystem.create(function(){return{name:'app'};});var update=app.update;it('registers an update',function(){var action1={fromKind:['article','specific'],type:'TOGGLE_BOOKMARK'};var action2={fromKind:['article'],type:'.LOAD'};update.register(action1.fromKind,action1.type,function(){});update.forKind(action2.fromKind,function(updates){updates.register(action2.type,function(){});updates.register(action2.type,function(){});});var reg=app.update[registryAttribute];expect(reg.get(_registry.ActionRegistry.keyFor(['article','specific'],'TOGGLE_BOOKMARK'))).toEqual(expect.anything());expect(reg.get(_registry.ActionRegistry.keyFor(['article'],'.LOAD'))).toEqual(expect.anything());expect(reg.get(_registry.ActionRegistry.keyFor(['article','specific'],'.LOAD'))).toEqual(expect.anything());expect(reg.get(_registry.ActionRegistry.keyFor(['article'],'unknown'))).not.toEqual(expect.anything());expect(reg.get(_registry.ActionRegistry.keyFor(['unknown'],'.LOAD'))).not.toEqual(expect.anything());});it('reduces the app state according to registrations',function(){var app=Subsystem.create(function(){return{name:'app'};});var update=app.update;var data=(0,_immutable.fromJS)({element1:{element2:{element3:{kind:['article','specific']},kind:['container']},kind:['container']},kind:'root'});var root=Cursor.from(data);var el1=function el1(cursor){return cursor.get('element1');};var el2=function el2(cursor){return cursor.getIn(['element1','element2']);};var el3=function el3(cursor){return cursor.getIn(['element1','element2','element3']);};var bookmark=function bookmark(cursor){return cursor.get('bookmark');};var globalBookmark=function globalBookmark(cursor){return cursor.get('globalBookmark');};var localUpdate=actions.atCursor(el3(root),{type:'TOGGLE_BOOKMARK'});var globalUpdate=actions.atCursor(el1(root),{type:'.TOGGLE_BOOKMARK'});var bubblingUpdate=actions.atCursor(el3(root),{type:'.TOGGLE_BOOKMARK'});update.register(['article','specific'],'TOGGLE_BOOKMARK',function(e){return e.set('bookmark',true);});update.register('container','.TOGGLE_BOOKMARK',function(e){return e.set('globalBookmark',true);});var kernel=Kernel.create([_.default,app],{},{});var reducer=kernel.subsystems.update.reducer;expect(flow(reducer(data,localUpdate),el3,bookmark)).toBe(true);expect(flow(reducer(data,globalUpdate),el1,globalBookmark)).toBe(true);expect(flow(reducer(data,bubblingUpdate),el2,globalBookmark)).toBe(true);});});